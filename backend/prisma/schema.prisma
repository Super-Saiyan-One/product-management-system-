generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id                Int      @id @default(autoincrement())
  statusNote        String?
  status            String   // saleable, non-saleable, saleable-pending-removal
  hasQualityCert    Boolean  @default(false)
  name              String
  brand             String?
  barcode           String?  @unique
  shippingCode      String?  @unique
  description       String?
  highlights        String?
  marketPrice       Float?
  salePrice         Float?
  purchasePrice     Float?
  minPurchasePrice  Float?
  shippingFee       Float?
  warehouseCode     String?
  supplierCode      String?
  warehouseName     String?
  oldShippingCode1  String?
  oldShippingCode2  String?
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  updateRecords     UpdateRecord[]
  
  @@map("products")
}

model UpdateRecord {
  id          Int      @id @default(autoincrement())
  productId   Int
  action      String   // create, update, delete
  oldValues   String?  @db.Text
  newValues   String?  @db.Text
  changes     String?  @db.Text
  userId      Int?
  createdAt   DateTime @default(now())
  
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  user        User?    @relation(fields: [userId], references: [id])
  
  @@map("update_records")
}

model User {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  email         String   @unique
  password      String
  role          String   @default("user")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  updateRecords UpdateRecord[]
  
  @@map("users")
}

model Brand {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  code      String?  @unique
  createdAt DateTime @default(now())
  
  @@map("brands")
}

model Warehouse {
  id          Int      @id @default(autoincrement())
  code        String   @unique
  name        String   @unique
  address     String?
  supplierCode String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("warehouses")
}

model Supplier {
  id          Int      @id @default(autoincrement())
  code        String   @unique
  name        String
  contactInfo String?
  createdAt   DateTime @default(now())
  
  @@map("suppliers")
}